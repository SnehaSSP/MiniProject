name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create Dockerfile dynamically
      run: |
        cat <<EOF > Dockerfile
        FROM python:3.11-slim

        # Avoid prompts during install
        ENV DEBIAN_FRONTEND=noninteractive

        # Install Chrome & dependencies
        RUN apt-get update && apt-get install -y \
            wget unzip gnupg curl \
            fonts-liberation libappindicator3-1 libasound2 \
            libatk-bridge2.0-0 libatk1.0-0 libcups2 \
            libdbus-1-3 libgdk-pixbuf2.0-0 libnspr4 libnss3 \
            libx11-xcb1 libxcomposite1 libxdamage1 libxrandr2 \
            xdg-utils --no-install-recommends && \
            wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add - && \
            echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list && \
            apt-get update && apt-get install -y google-chrome-stable && \
            rm -rf /var/lib/apt/lists/*

        # Install Python dependencies
        COPY requirements.txt .
        RUN pip install --upgrade pip
        RUN pip install -r requirements.txt

        # Copy project
        COPY . /app
        WORKDIR /app

        # Run tests (pytest.ini handles the command)
        CMD ["pytest"]
        EOF

    - name: Build Docker image
      run: docker build -t pytest-selenium-image .

    - name: Run tests in Docker container
      run: docker run --name test-runner pytest-selenium-image

    - name: Copy pytest HTML report
      run: docker cp test-runner:/app/report.html report.html

    - name: Upload test report
      uses: actions/upload-artifact@v4
      with:
        name: pytest-html-report
        path: report.html
